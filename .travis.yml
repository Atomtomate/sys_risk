notifications:
  email:
    recipients:
      - jstobbe@fias.uni-frankfurt.de
    on_success change
    on_failure change

language: cpp

env:
  global:
    # Ubuntu version
    - LINUX_DIST=trusty
    - DEPS_DIR=${TRAVIS_BUILD_DIR}/deps
    # Global build options and C++ flags
    - CXX_FLAGS="-Wall -std=c++17 -pedantic -Werror -Wno-variadic-macros -Wno-long-long -Wno-shadow"
    # Misc
    - RUN_TESTS=true
    - COVERAGE=false

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: true
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
            - valgrind
            - python-yaml
            - lcov
            - libopencv-dev
      env:
        - MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"

    - os: linux
      dist: trusty
      sudo: true
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7.3
            - valgrind
            - python-yaml
            - lcov
            - libopencv-dev
      env:
        - MATRIX_EVAL="CC=gcc-7.3 && CXX=g++-7.3"

    - os: linux
      dist: trusty
      sudo: true
      compiler: gcc
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-6.0
            - valgrind
            - python-yaml
            - lcov
            - libopencv-dev
      env:
        - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"


#- sudo apt-get install -y r-cran-rinside libsundials-dev
before_script:
    - echo "deb https://ftp.fau.de/cran/bin/linux/ubuntu artful/" | sudo tee -a /etc/apt/sources.list
    - sudo apt-get update -qq
    - sudo apt-get install -y mercurial libeigen3-dev libboost-all-dev libgtest-dev google-mock git
    
before_install:
    # Combine global build options with OS/compiler-dependent options
    - export CMAKE_OPTIONS=${CMAKE_OPTIONS}" "${ENV_CMAKE_OPTIONS}
    - export CXX_FLAGS=${CXX_FLAGS}" "${ENV_CXX_FLAGS}

install:
    - if [ "$CXX" = "clang++" ] && [ "$TRAVIS_OS_NAME" = "linux" ]; then export CXX="clang++-3.7" CC="clang-3.7"; fi
    - echo ${PATH}
    - echo ${CXX}
    - ${CXX} --version
    - ${CXX} -v
    - sudo pip install codecov
    
    # Download and install recent cmake
    - |
      if [[ ${TRAVIS_OS_NAME} == "linux" ]]; then
        CMAKE_URL="http://www.cmake.org/files/v3.5/cmake-3.5.1-Linux-x86_64.tar.gz"
        mkdir -p ${DEPS_DIR}/cmake
        travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${DEPS_DIR}/cmake
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      fi

script:
    ############################################################################
    # Build main and tests
    ############################################################################
     - mkdir -p build
     - cd build
     - cmake ..
     - make
     - ctest


after_success:
    - codecov -t c376990f-2ad6-4f7b-bbdb-5378a52e295c -X gcov

