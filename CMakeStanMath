#SUNDIALS (reqired by stan math)
find_package(SUNDIALS OPTIONAL_COMPONENTS sundials_idas sundials_cvodes)
set(SUNDIALS_STATIC_LIBRARIES)
if (SUNDIALS_FOUND)
    if (NOT WIN32)
        # On Linux and Mac OS we can look for .a archive files
        foreach (_LIB IN LISTS SUNDIALS_LIBRARIES)
            get_filename_component(_LIBROOT ${_LIB} DIRECTORY)
            get_filename_component(_LIBNAME ${_LIB} NAME_WE)
            find_file(_LIBSTATIC "${_LIBNAME}.a" PATHS ${_LIBROOT} NO_DEFAULT_PATH)
            if (_LIBSTATIC)
                list(APPEND SUNDIALS_STATIC_LIBRARIES ${_LIBSTATIC})
            endif ()
            unset(_LIBROOT CACHE)
            unset(_LIBNAME CACHE)
            unset(_LIBSTATIC CACHE)
            unset(_LIB CACHE)
            unset(_LIBROOT)
            unset(_LIBNAME)
            unset(_LIBSTATIC)
            unset(_LIB)
        endforeach ()

        # Fall back to dynamic external if we haven't found static external
        if (NOT SUNDIALS_STATIC_LIBRARIES)
            set(SUNDIALS_STATIC_LIBRARIES ${SUNDIALS_LIBRARIES})
        endif ()
    else ()
        # On Windows we have no way to distinguish .lib files that import dlls or represent static external
        set(SUNDIALS_STATIC_LIBRARIES ${SUNDIALS_LIBRARIES})
    endif ()
endif ()

# Determine SUNDIALS interface version
if (SUNDIALS_FOUND)
    if ("${SUNDIALS_VERSION}" VERSION_LESS "3.0.0")
        add_definitions(-DCADET_SUNDIALS_IFACE_2)
    elseif ("${SUNDIALS_VERSION}" VERSION_LESS "4.0.0")
        add_definitions(-DCADET_SUNDIALS_IFACE_3)
    endif ()
endif ()

message("Found SUNDIALS: ${SUNDIALS_FOUND}")
if (SUNDIALS_FOUND)
    message("  Version ${SUNDIALS_VERSION}")
    message("  Includes ${SUNDIALS_INCLUDE_DIRS}")
    message("  Libs ${SUNDIALS_LIBRARIES}")
    message("  Static libs ${SUNDIALS_STATIC_LIBRARIES}")
    include_directories(${SUNDIALS_INCLUDE_DIRS})
endif ()

